def format_recipe_message(recipe):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ—Ü–µ–ø—Ç–æ–º"""
    if not recipe:
        return "–†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"

    message = f"üçΩÔ∏è *{recipe['name']}*\n\n"
    message += f"üìã *–†–µ—Ü–µ–ø—Ç:*\n{recipe['recipe']}\n\n"
    message += f"üìä *–ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å:*\n"
    message += f"‚Ä¢ –ö–∞–ª–æ—Ä–∏–∏: {recipe['calories']} –∫–∫–∞–ª\n"
    message += f"‚Ä¢ –ë–µ–ª–∫–∏: {recipe['protein']}–≥\n"
    message += f"‚Ä¢ –£–≥–ª–µ–≤–æ–¥—ã: {recipe['carbs']}–≥\n"
    message += f"‚Ä¢ –ñ–∏—Ä—ã: {recipe['fat']}–≥"

    return message


def get_meal_type_name(meal_type):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏"""
    names = {
        'breakfast': '–ó–∞–≤—Ç—Ä–∞–∫',
        'lunch': '–û–±–µ–¥',
        'dinner': '–£–∂–∏–Ω'
    }
    return names.get(meal_type, meal_type)